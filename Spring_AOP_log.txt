Jul 31, 2015 9:29:40 PM org.springframework.context.support.ClassPathXmlApplicationContext prepareRefresh
INFO: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@8bfaf9f: startup date [Fri Jul 31 21:29:40 IST 2015]; root of context hierarchy
Jul 31, 2015 9:29:40 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [spring-beans.xml]
31-07-2015 21:29:40 312  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - aroundAdvice before proceed 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - beforeAdvice :: execution(User org.springframework.samples.springaop.service.UserService.getUserProfile(Integer,String)) 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.service.UserServiceImpl - user :: User [userId=1, name=sriram] 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - aroundAdvice after proceed :: User [userId=1, name=aroundAdvice after proceed] 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - afterAdvice :: execution(User org.springframework.samples.springaop.service.UserService.getUserProfile(Integer,String)) 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - afterReturningAdvice :: execution(User org.springframework.samples.springaop.service.UserService.getUserProfile(Integer,String)) 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - afterReturningAdvice after proceed :: User [userId=1, name=aroundAdvice after proceed] 
User [userId=1, name=aroundAdvice after proceed]
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - aroundAdvice before proceed 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - beforeAdvice :: execution(User org.springframework.samples.springaop.service.UserService.getUserProfileAroundAdvice(Integer,String)) 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.service.UserServiceImpl - user :: User [userId=3, name=Lakshman] 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - aroundAdvice after proceed :: User [userId=3, name=aroundAdvice after proceed] 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - afterAdvice :: execution(User org.springframework.samples.springaop.service.UserService.getUserProfileAroundAdvice(Integer,String)) 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - afterReturningAdvice :: execution(User org.springframework.samples.springaop.service.UserService.getUserProfileAroundAdvice(Integer,String)) 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - afterReturningAdvice after proceed :: User [userId=3, name=aroundAdvice after proceed] 
User [userId=3, name=aroundAdvice after proceed]
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - aroundAdvice before proceed 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - beforeAdvice :: execution(User org.springframework.samples.springaop.service.UserService.getUserProfileBeforeAdviceAfterReturningAdvice(Integer,String)) 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.service.UserServiceImpl - user :: User [userId=2, name=seetha] 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - aroundAdvice after proceed :: User [userId=2, name=aroundAdvice after proceed] 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - afterAdvice :: execution(User org.springframework.samples.springaop.service.UserService.getUserProfileBeforeAdviceAfterReturningAdvice(Integer,String)) 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - afterReturningAdvice :: execution(User org.springframework.samples.springaop.service.UserService.getUserProfileBeforeAdviceAfterReturningAdvice(Integer,String)) 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - afterReturningAdvice after proceed :: User [userId=2, name=aroundAdvice after proceed] 
User [userId=2, name=aroundAdvice after proceed]
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - aroundAdvice before proceed 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - beforeAdvice :: execution(User org.springframework.samples.springaop.service.UserService.getUserProfileWithException(Integer,String)) 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - afterAdvice :: execution(User org.springframework.samples.springaop.service.UserService.getUserProfileWithException(Integer,String)) 
31-07-2015 21:29:40 328  [main] INFO  o.s.s.s.aop.logging.UserLoggingImpl - There has been an exception: org.springframework.samples.springaop.aop.exception.InValidUserException: please provide valid inputs to construct User instance 
org.springframework.samples.springaop.aop.exception.InValidUserException: please provide valid inputs to construct User instance
	at org.springframework.samples.springaop.service.UserServiceImpl.getUserProfileWithException(UserServiceImpl.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at org.springframework.samples.springaop.aop.logging.UserLoggingImpl.aroundAdvice(UserLoggingImpl.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:621)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:610)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:68)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:43)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy11.getUserProfileWithException(Unknown Source)
	at org.springframework.samples.springaop.app.App.main(App.java:20)
Jul 31, 2015 9:29:40 PM org.springframework.context.support.ClassPathXmlApplicationContext doClose
INFO: Closing org.springframework.context.support.ClassPathXmlApplicationContext@8bfaf9f: startup date [Fri Jul 31 21:29:40 IST 2015]; root of context hierarchy
